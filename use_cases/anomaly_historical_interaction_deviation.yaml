name: historical interaction deviation
type: anomaly-triggering
purpose: this use case aims to identify employees who recently interacted with a patient without having any prior history of interaction in the last 6 months. 
prerequisites: 
- indexes: 
          anomaly_collection (explanation: an index where identified anomalies are stored as events)
- lookups: 
          baseline_historical_interaction (explanation: a lookup file that stores information about when employees and patients last have had contact)
- macros: 
          pda_indexes (explanation: references the indexes where patient privacy act associated logs and events are stored)
          pda_sourcetypes (explanation: references the sourcetypes assigned to patient privacy act associated logs and events)
          pda_sources (explanation: references the sources assigned to patient privacy act associated logs and events)
- fields: 
          staff_ID (explanation: a unique identifier for the employee)
          patient_ID (explanation: a unique identifier for the patient)
- searches: 
          search 1
          search 2
          search 3
how_to_implement (note: everything is case sensitive, and the steps 1-5 should be executed in a sequential order):
          1. create an index called 'anomaly_collection'.
          2. create a KVstore lookup called 'baseline_historical_interaction', which should include the fields 'staff_ID', 'patient_ID', and 'last_interaction'.
          3. create the field extractions and field aliases for 'staff_ID' and 'patient_ID'. 
          4. create the macros 'pda_indexes', 'pda_sourcetypes', and 'pda_sources'. Have them refer to the indexes, sourcetypes and sources that are used by the logs and events that fall under the Patient Data Act - this ensures that when the macros are referenced in a search, Splunk will retreive the right data. 
          5. create 'search 1', followed by 'search 2', followed by 'search 3'.
search 1: 
- description: establishes a baseline of historical interaction for the past 6 months.
- search: 
          `pda_indexes` `pda_sourcetypes` `pda_sources` earliest=-6mon
          | fields _time, staff_ID, patient_ID
          | stats latest(_time) as last_interaction count by staff_ID, patient_ID
          | table staff_ID, patient_ID, last_interaction
          | outputlookup baseline_historical_interaction
- time range picker: the time range for search 1 is explicitly defined within the search using the earliest option (earliest=-6mon). By default, the search processes data from current time to 6 month ago (with the possiblity to adjust to specific needs/requirements).
- cron schedule: N/A (run only once in the search bar).
search 2: 
- description: incrementally updates the historical interaction daily.
- search:
          | inputlookup baseline_historical_interaction
          | append [
                    `pda_indexes` `pda_sourcetypes` `pda_sources` earliest=-1d@d latest=@d
                    | fields _time, staff_ID, patient_ID
                    | stats latest(_time) as last_interaction count by staff_ID, patient_ID
                    | table staff_ID, patient_ID, last_interaction
                   ]
          | stats max(last_interaction) as last_interaction by staff_ID, patient_ID
          | table staff_ID, patient_ID, last_interaction
          | outputlookup baseline_historical_interaction
- time range picker: the time range for search 2 is explicitly defined in the search using the earliest and latest options (earliest=-1d@d and latest=@d). By default, the search processes data from the entire previous day (midnight to midnight).
- cron schedule: 0 0 * * * (scheduled to run every day of the week at midnight).
search 3:
- description: identifies employees who have interacted with a patient within the past 10-minute window (accounting for a 2-minute latency) but have not had any prior contact with the same patient in the last 6 months. For every single match, an anomaly is triggered and stored in the anomaly index for further correlation and analytics.
- search:
          `pda_indexes` `pda_sourcetypes` `pda_sources` earliest=-12min@min latest=-2min@min
          | fields _time, staff_ID, patient_ID
          | stats count earliest(_time) as last_interaction by staff_ID, patient_ID
          | lookup baseline_historical_interaction staff_ID patient_ID OUTPUT last_interaction AS baseline_last_interaction
          | eval time_since_last_interaction = now() - baseline_last_interaction
          | eval anomaly = if(isnull(baseline_last_interaction) OR time_since_last_interaction >= 14515200 , "1", "0")
          | where anomaly = "1"
          | convert timeformat="%Y-%m-%d %H:%M:%S" ctime(last_interaction) AS last_interaction 
          | convert timeformat="%Y-%m-%d %H:%M:%S" ctime(baseline_last_interaction) AS baseline_last_interaction 
          | eval title = "Historical interaction deviation"
          | eval description = "Employee ID ".staff_ID." started interacting with Patient ID ".patient_ID." on ".last_interaction.". The last recorded interaction prior to that was on ".baseline_last_interaction."."
          | addinfo
          | eval drilldown_search="`pda_indexes` `pda_sourcetypes` `pda_sources` staff_ID=" . staff_ID . " patient_ID=" . patient_ID . " earliest=" . info_min_time . " latest=" . info_max_time
          | eval risk_score = "20" ```this should be a value ranging from 0 and 100 - please adjust so it aligns with the perceived risk of this type of anomaly```
          | fields title, description, drilldown_search, risk_score, staff_ID, patient_ID
          | collect index=anomaly_collection addinfo=false
- time range picker: the time range for search 3 is explicitly defined within the search using the earliest and latest options (earliest=-12min@min and latest=-2min@min). By default, the search processes data from 12 minutes ago up to 2 minutes ago (with the possiblity to adjust to specific needs/requirements), ensuring a consistent 10-minute window that accounts for potential data latency.
- cron schedule: */10 * * * * (scheduled to run every 10th minute of every hour, 24/7, across all days of the week).

